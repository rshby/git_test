# secret
# sensitive data
# saat kita menggunakan ConfigMap, maka data yang ada di dalam ConfigMap dianggap tidak sensitive
# tapi kadang konfigurasi ke aplikasi kita butuh data yang sifatnya sensitive, seperti username password database, API key, Secret Key, dan sejenisnya
# untuk menyimpan data sensitive seperti itu, di kubernetes kita bisa menggunakan object yang disebut Secret. Secret sama seperti ConfigMap, berisikan key-value

# kubernetes menyimpan  Secret secara aman dengan cara hanya mendistribusikan Secret pada Node yg memang membutuhkan Secret tersebut
# Secret selalu disimpan di memory Node dan tidak pernah disimpan di physical storage
# di master Node sendiri (di etdc), Secret disimpan dengan diencrypt. sehingga menjadi lebih aman
# secara sederhana, gunakan ConfigMap untuk configurasi yg tidak sensitive, dan gunakan Secret untuk konfigurasi yg sensitive

# melihat secret
# kubectl get secrets
# kubectl describe secret secret-name

# template
apiVersion: v1
kind: Secret
metadata:
  name: secret-name
data:
  ENV_KEY: base64(ENV_VALUE)
stringData:
  ENV_KEY_STR: "ENV_VALUE"

---
# example
# create config map
apiVersion: v1
kind: ConfigMap
metadata:
  name: nodejs-env-config
data:
  APPLICATION: "My Cool Application"

---
# create Secret
apiVersion: v1
kind: Secret
metadata:
  name: nodejs-env-secret
stringData:
  VERSION: "1.0.0"

---
# create Replica Set
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: nodejs-env
spec:
  replicas: 3
  selector:
    matchLabels:
      name: nodejs-env # Pod yg akan dimaintaine untuk tetap mereplika menjadi 3
  template:
    metadata:
      name: nodejs-env # nama Pod yg akan dibuat
      labels:
        name: nodejs-env
    spec:
      containers:
        - name: nodejs-env
          image: khannedy/nodejs-env
          ports:
            - containerPort: 3000
          envFrom:
            - configMapRef:
                name: nodejs-env-config # nama dari ConfigMap yg akan digunakan untuk override ENV
            - secretRef:
                name: nodejs-env-secret # nama dari Secret yg akan digunakan untuk override ENV

---
# create Service
apiVersion: v1
kind: Service
metadata:
  name: nodejs-env
  labels:
    name: nodejs-env
spec:
  type: NodePort
  selector:
    name: nodejs-env # nama Pod yg akan ada di dalam Service ini
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 31001
